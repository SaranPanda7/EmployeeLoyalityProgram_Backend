"""add triggers

Revision ID: 9099795201df
Revises: 4811f319f829
Create Date: 2022-11-21 10:43:12.715190

"""
import sqlalchemy as sa
from alembic import op

from app.db.utils import create_trigger_for_update

# revision identifiers, used by Alembic.
revision = "9099795201df"
down_revision = "4811f319f829"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "employement_rewards_reward_id_fkey",
        "employement_rewards",
        type_="foreignkey",
    )
    op.drop_constraint(
        "employement_rewards_employement_id_fkey",
        "employement_rewards",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "employement_rewards",
        "employements",
        ["employement_id"],
        ["id"],
        source_schema="dev",
        referent_schema="dev",
    )
    op.create_foreign_key(
        None,
        "employement_rewards",
        "rewards",
        ["reward_id"],
        ["id"],
        source_schema="dev",
        referent_schema="dev",
    )
    op.drop_constraint(
        "rewards_employement_id_fkey", "rewards", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "rewards",
        "employements",
        ["employement_id"],
        ["id"],
        source_schema="dev",
        referent_schema="dev",
    )
    op.drop_constraint(
        "user_rewards_reward_id_fkey", "user_rewards", type_="foreignkey"
    )
    op.drop_constraint(
        "user_rewards_user_id_fkey", "user_rewards", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "user_rewards",
        "users",
        ["user_id"],
        ["id"],
        source_schema="dev",
        referent_schema="dev",
    )
    op.create_foreign_key(
        None,
        "user_rewards",
        "rewards",
        ["reward_id"],
        ["id"],
        source_schema="dev",
        referent_schema="dev",
    )
    op.drop_constraint("users_employement_id_fkey", "users", type_="foreignkey")
    op.drop_constraint("users_group_id_fkey", "users", type_="foreignkey")
    op.create_foreign_key(
        None,
        "users",
        "employements",
        ["employement_id"],
        ["id"],
        source_schema="dev",
        referent_schema="dev",
    )
    op.create_foreign_key(
        None,
        "users",
        "groups",
        ["group_id"],
        ["id"],
        source_schema="dev",
        referent_schema="dev",
    )
    # ### end Alembic commands ###
    for i in ["groups", "employements", "users", "rewards"]:
        _dll = create_trigger_for_update(i)
        op.execute(_dll)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users", schema="dev", type_="foreignkey")
    op.drop_constraint(None, "users", schema="dev", type_="foreignkey")
    op.create_foreign_key(
        "users_group_id_fkey", "users", "groups", ["group_id"], ["id"]
    )
    op.create_foreign_key(
        "users_employement_id_fkey",
        "users",
        "employements",
        ["employement_id"],
        ["id"],
    )
    op.drop_constraint(None, "user_rewards", schema="dev", type_="foreignkey")
    op.drop_constraint(None, "user_rewards", schema="dev", type_="foreignkey")
    op.create_foreign_key(
        "user_rewards_user_id_fkey",
        "user_rewards",
        "users",
        ["user_id"],
        ["id"],
    )
    op.create_foreign_key(
        "user_rewards_reward_id_fkey",
        "user_rewards",
        "rewards",
        ["reward_id"],
        ["id"],
    )
    op.drop_constraint(None, "rewards", schema="dev", type_="foreignkey")
    op.create_foreign_key(
        "rewards_employement_id_fkey",
        "rewards",
        "employements",
        ["employement_id"],
        ["id"],
    )
    op.drop_constraint(
        None, "employement_rewards", schema="dev", type_="foreignkey"
    )
    op.drop_constraint(
        None, "employement_rewards", schema="dev", type_="foreignkey"
    )
    op.create_foreign_key(
        "employement_rewards_employement_id_fkey",
        "employement_rewards",
        "employements",
        ["employement_id"],
        ["id"],
    )
    op.create_foreign_key(
        "employement_rewards_reward_id_fkey",
        "employement_rewards",
        "rewards",
        ["reward_id"],
        ["id"],
    )
    # ### end Alembic commands ###
