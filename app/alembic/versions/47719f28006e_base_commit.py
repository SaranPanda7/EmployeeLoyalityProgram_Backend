"""base commit

Revision ID: 47719f28006e
Revises: 
Create Date: 2022-11-23 12:33:28.395448

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '47719f28006e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employements',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='dev'
    )
    op.create_table('groups',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='dev'
    )
    op.create_table('modes',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='dev'
    )
    op.create_table('student',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('enroll', mysql.INTEGER(display_width=11), nullable=True),
    sa.Column('personal_info', sa.JSON(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('created_on', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='dev'
    )
    op.create_table('rewards',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('employement_id', postgresql.UUID(), nullable=False),
    sa.Column('points', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('is_expiry_date', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('valid_till', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['employement_id'], ['dev.employements.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title'),
    schema='dev'
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('employee_id', sa.String(length=10), nullable=True),
    sa.Column('email_id', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('gender', sa.String(length=2), nullable=True),
    sa.Column('designation', sa.String(length=15), nullable=True),
    sa.Column('group_id', postgresql.UUID(), nullable=False),
    sa.Column('employement_id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['employement_id'], ['dev.employements.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['dev.groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_id'),
    sa.UniqueConstraint('employee_id'),
    schema='dev'
    )
    op.create_table('employement_rewards',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('employement_id', postgresql.UUID(), nullable=False),
    sa.Column('reward_id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['employement_id'], ['dev.employements.id'], ),
    sa.ForeignKeyConstraint(['reward_id'], ['dev.rewards.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='dev'
    )
    op.create_table('user_rewards',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('reward_id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['reward_id'], ['dev.rewards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['dev.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='dev'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_rewards', schema='dev')
    op.drop_table('employement_rewards', schema='dev')
    op.drop_table('users', schema='dev')
    op.drop_table('rewards', schema='dev')
    op.drop_table('student', schema='dev')
    op.drop_table('modes', schema='dev')
    op.drop_table('groups', schema='dev')
    op.drop_table('employements', schema='dev')
    # ### end Alembic commands ###
